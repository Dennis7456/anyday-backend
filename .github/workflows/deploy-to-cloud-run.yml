name: Build and Deploy to Google Cloud Artifact Registry

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      GAR_LOCATION: "us-central1"
      PROJECT_ID: "anyday-essay"  # replace with your actual project ID
      REPO_NAME: "anyday-essay-repo"
      CLOUD_RUN_SERVICE: "anyday-essay-service"
      CLOUD_RUN_REGION: "us-central1"
      IMAGE_NAME: "cloud-run-source-deploy"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: |
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$IMAGE_NAME:latest .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$IMAGE_NAME:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $CLOUD_RUN_SERVICE \
            --image $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$IMAGE_NAME:latest \
            --platform managed \
            --region $CLOUD_RUN_REGION \
            --allow-unauthenticated \
            --set-env-vars "CLOUD_SQL_CONNECTION_NAME=anyday-essay:us-central1:anyday-db,POSTGRES_PRISMA_URL=postgresql://root:l\`N3=\$hQ:KQOr(P@/anyday-db?host=/cloudsql/anyday-essay:us-central1:anyday-db,POSTGRES_URL_NON_POOLING=postgresql://root:l\`N3=\$hQ:KQOr(P@/anyday-db?host=/cloudsql/anyday-essay:us-central1:anyday-db"
